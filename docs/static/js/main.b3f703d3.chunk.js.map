{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","downsized_medium","images","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","img","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAe9C,OACI,sBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,GAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,QAK5C,SACI,uBACIC,KAAK,OACLC,MAAUT,EACVU,SAhBc,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,a,+BCPnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,YAAkD,IAA/CC,EAA8C,EAA9CA,GAAIC,EAA0C,EAA1CA,MAAiBC,EAAyB,EAAnCC,OAAUD,iBAC1C,MAAO,CACHF,KACAC,QACAT,IAAG,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAkBV,QAVZ,kBAcZM,GAdY,4CAAH,sDCCPM,EAAc,SAAC,GAAwB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IACtC,OACI,sBAAKa,UAAY,OAAjB,UACI,qBAAKC,IAAQd,EAAMe,IAAON,IAC1B,kCAAMA,EAAN,WCDCO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEZd,mBAAS,CACjCqB,KAAM,GACNY,SAAS,IAJ2B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAiBxC,OAVAC,qBAAW,WAEPvB,EAASC,GACJuB,MAAM,SAAAC,GACHH,EAAS,CACLd,KAAMiB,EACNL,SAAS,MAEd,CAACnB,OAELoB,EDb2BK,CAAczB,GAAlCa,EAFuB,EAE7BN,KAAcY,EAFe,EAEfA,QAGtB,OACI,qCACI,mCAAMnB,EAAN,OAEEmB,GAAW,wCAEb,qBAAKJ,UAAU,YAAf,SAEQF,EAAOJ,KAAI,SAACiB,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIhB,aEhBxBiB,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAS9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCjBlC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.b3f703d3.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState(''); // para que no sea undefined\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories( cats => [ inputValue, ...cats ]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value = { inputValue }\r\n                onChange = { handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=H3S9YpjeyxA5abNZZKsMCI47X9Jk9Wod`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(({ id, title, images: { downsized_medium } }) => {\r\n        return {\r\n            id,\r\n            title,\r\n            url: downsized_medium?.url\r\n        }\r\n    });\r\n    // setImages(gifs);\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url }) => {\r\n    return (\r\n        <div className = \"card\">\r\n            <img src = { url } alt= { title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data: images, loading } = useFetchGifs( category );\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n\r\n            { loading && <p>Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((img) => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [ state, setState ] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            }, [category])\r\n    })\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    //const handleAdd = () => {\r\n        // setCategories([...categories, 'Carnes']);\r\n    //    setCategories( cats => [...categories, 'Carnes']);\r\n    //}\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid\r\n                            key={ category }\r\n                            category={ category }\r\n                        />                            \r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}